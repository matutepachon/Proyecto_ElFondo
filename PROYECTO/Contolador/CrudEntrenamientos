document.getElementById("entrenamientoForm").addEventListener("submit", async function (e) {
    e.preventDefault();

    const tipoEnt = document.getElementById("tipo_ent").value;
    const tiempoEnt = parseInt(document.getElementById("tiempo_ent").value);
    const calorQuem = parseInt(document.getElementById("calor_quem").value);
    const peso = parseFloat(document.getElementById("peso").value);

    try {
        // Obtener altura del cliente a partir del nuevo CRUD
        const altura = await obtenerAlturaCliente();

        if (peso && altura) {
            const imc = (peso / (altura * altura)).toFixed(2);
            document.getElementById("imc").value = imc;

            const data = {
                tipo_ent: tipoEnt,
                tiempo_ent: tiempoEnt,
                calor_quem: calorQuem,
                peso: peso,
                imc: imc
            };

            // Verificar que los datos a enviar son correctos
            console.log("Datos a enviar:", data);

            const response = await fetch("../Modulos/entrenamientos.php", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            });

            // Verificar si la respuesta es correcta
            if (!response.ok) {
                throw new Error("Error en la solicitud al servidor");
            }

            const result = await response.json();
            alert(result.message);
        } else {
            alert("Por favor, ingrese un peso válido y asegúrese de que la altura se obtenga correctamente.");
        }
    } catch (error) {
        alert("Error: " + error.message);
        console.error(error); // Mostrar el error en la consola para depuración
    }
});

async function obtenerAlturaCliente() {
    try {
        const response = await fetch("../Modulos/clientes.php");
        if (!response.ok) {
            throw new Error("Error al obtener la altura del cliente");
        }

        const data = await response.json();

        // Verificar que la propiedad Altura esté presente en el JSON
       
        // La propiedad Altura ya está en la respuesta, por lo tanto no es necesario verificar un mensaje de error
        return data.Altura; // Usamos directamente "Altura"
    } catch (error) {
        console.error("Error en obtenerAlturaCliente:", error);
        throw error; // Propagar el error para ser manejado en el formulario
    }
}

async function calcularIMC() {
    const peso = parseFloat(document.getElementById("peso").value);
    try {
        const altura = await obtenerAlturaCliente();

        if (peso && altura) {
            const imc = (peso / (altura * altura));
            document.getElementById("imc").value = imc;
        } else {
            alert("Por favor, ingrese un peso válido y asegúrese de que la altura se obtenga correctamente.");
        }
    } catch (error) {
        alert("Error al obtener la altura del cliente: " + error.message);
    }
}

// Llama a la función calcularIMC cuando el peso cambia
document.getElementById("peso").addEventListener("change", calcularIMC);

function calcularCalorias() {
    const tiempo = parseInt(document.getElementById("tiempo_ent").value);
    const caloriasPorHora = 300; // Ejemplo de calorías por hora
    document.getElementById("calor_quem").value = tiempo * caloriasPorHora;
}

// Actualiza las calorías al cambiar el tiempo de entrenamiento
document.getElementById("tiempo_ent").addEventListener("change", calcularCalorias);
